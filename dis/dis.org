* 函数
** 基本
*** void _dis_si(uint16_t d)
#+begin_example
直接把16位的d数据发送出去。函数会设置好CS,DIN和CLK.
#+end_example
*** void  _dis_noop(void)
#+begin_example
No-op
#+end_example
*** void _dis_dn(char d,char n,char dot)
#+begin_example
在第n位(从0开始，最右边位为0)上显示d.dot为1,则显示小数点,为零则不显示。此函数不管n位是否设置成自动解码。
#+end_example
*** void _dis_decode_mode(uint8_t d)
#+begin_example
把d作为低8位，发送decode_mode指令。
#+end_example
*** void _dis_intensity(uint8_t d)
#+begin_example
把d作为低8位，发送intensity指令。
#+end_example
*** void _dis_scan_limit(uint8_t d)
#+begin_example
把d作为低8位，发送scan_limit指令。
#+end_example
*** void _dis_shutdown(uint8_t d)
#+begin_example
把d作为低8位，发送shutdown指令。
#+end_example
*** void _dis_test(uint8_t d)
#+begin_example
把d作为低8位，发送display test指令。
#+end_example
** 扩展
*** void dis_test_on(void)
#+begin_example
打开测试模式
#+end_example
*** void dis_test_off(void)
#+begin_example
关闭测试模式。
#+end_example
*** void dis_decode_all_on(void)
#+begin_example
打开所有位的自动解码
#+end_example
*** void dis_decode_all_off(void)
#+begin_example
关闭所有位的自动解码
#+end_example
*** void dis_decode_on(uint8_t n)
#+begin_example
打开在n(0~7)位上的自动解码
#+end_example
*** void dis_decode_off(uint8_t n)
#+begin_example
关闭在n(0~7)上的自动解码
#+end_example
*** void dis_on(void)
#+begin_example
打开显示
#+end_example
*** void dis_off(void)
#+begin_example
关闭显示
#+end_example
*** void dis_clear(void)
#+begin_example
使0~7位显示空(blank)
#+end_example
*** int dis_number(int32_t d)
#+begin_example
显示一个有符号十进制数字，需要手动设置decode,建议用dis_decode_all_on()来使所有位自动decode。
#+end_example
*** int dis_hex(uint8_t d,uint8_t n)
#+begin_example
在n(0~7)上显示一个无符号16进制数字。需要手动设置decode模式，建议用dis_decode_all_off()来使所有位关闭自动decode。
#+end_example
*** int dis_hex_number(int32_t d)
#+begin_example
显示有符号的16进制数字。需要手动设置decode模式，建议用dis_decode_all_off()来使所有位关闭自动decode。
#+end_example
*** void dis_clear_shift_count(void)
#+begin_example
清空dis_hex_and_shift_left的存储信息。下次使用dis_hex_and_shift_left时会从新显示，不会对以前dis_hex_and_shift_left的数据保留。注意，dis_clear会清空屏幕上的内容。而dis_clear_shift_count是清除内部的数据存储。dis_clear后使用dis_hex_and_shift_left，dis_clear没有效果。
#+end_example
*** void dis_init(void)
#+begin_example
初始化端口。
#+end_example
* 用法
** 初始化
#+begin_example
dis_init();
dis_test_off();
dis_clear();
dis_on();
dis_decode_all_on();
#+end_example
** 其他
   参见dis_sample.c
